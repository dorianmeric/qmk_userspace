// thumb combos /////////////////////////////////////////////////////////////////////////////////////////////

COMB( thum_base_left,  LT(U_MEDIA, KC_ESC),          LT(U_MOUSE,KC_TAB),    LT(U_NAV,KC_SPC)    ) 
COMB( thum_base_right, LT(U_FUN, KC_DEL),            LT(U_NUM,KC_BSPC),     LT(U_SYM,KC_ENT)   )   
COMB( thum_nav,        KC_DEL,                       KC_ENT,                 KC_BSPC             )       // NAV layer                
COMB( thum_mouse,      KC_BTN3,                      KC_BTN2,                KC_BTN1             )       // Mouse layer       
COMB( thum_media,      KC_MUTE,                      KC_MSTP,                KC_MPLY             )              
COMB( thum_num,        KC_DOT,                       KC_0,                   KC_MINS             )                        


// Left Hand /////////////////////////////////////////////////////////////////////////////////////////////
COMB( combo18,     LCTL(KC_X),               KC_Z,           ALGR_T(KC_X)    )       // z+x = Ctrl+x
COMB( combo16,     LCTL(KC_C),               ALGR_T(KC_X),   KC_C            )       // x+c = Ctrl+c
COMB( combo17,     LCTL(KC_V),               KC_C,           KC_D            )       // c+v = Ctrl+v
COMB( combo19,     KC_ENT,                   KC_D,           KC_V            )       // d+v = Ent
COMB( combo20,     KC_BACKSPACE,             LSFT_T(KC_T),   KC_G            )       // t+g = Backspace
 
COMB( combo98,     QK_BOOTLOADER,            KC_Q,  KC_W, KC_F,  KC_P,  KC_B)       // whole top row = puts the mcu in bootloader mode



// Right Hand /////////////////////////////////////////////////////////////////////////////////////////////
COMB( combo01,     RCTL(KC_BSPC),            J_KEY,          KC_L            )           // u++i = Backspace Word
COMB( combo05,     RCTL(KC_DEL),             KC_U,           KC_Y         )           // m+, = delete next word     h,
COMB( combo07,     KC_MINUS,                 KC_M,           RSFT_T(KC_N)    )           // h+j = -  , can also get _ with a Shift   
COMB( combo08,     KC_SEMICOLON,             KC_M,           KC_K    )                   // m+k = :
 
COMB( combo99,     QK_BOOTLOADER,            J_KEY,              KC_L,              KC_U,             KC_Y,              KC_SLSH)       // whole top row = puts the mcu in bootloader mode



///// GAME LAYER /////////////////////////////////////////////////////////////////////////////////////////////'
COMB( game_01,              KC_1,                   KC_Q,              KC_W ) 
COMB( game_02,              KC_2,                   KC_W,              KC_E ) 
COMB( game_03,              KC_3,                   KC_E,              KC_R ) 
COMB( game_04,              KC_4,                   KC_D,              KC_F ) 
COMB( game_05,              KC_5,                   KC_C,              KC_V ) 
COMB( game_p,               KC_P,                   KC_I,              KC_O ) 
COMB( game_n,               KC_N,                   KC_K,              KC_L ) // moved one row up
COMB( game_bootloader,      QK_BOOTLOADER,          KC_TAB,            KC_Q,              KC_W,              KC_E,              KC_R)       // whole top row = puts the mcu in bootloader mode

COMB( game_thumb_base_left,     KC_ESC,              KC_LALT,     KC_SPC              ) 
COMB( game_thumb_base_right,    KC_DEL,              KC_BSPC,     KC_ENT              )   



///// TEXT SHORTCUT /////////////////////////////////////////////////////////////////////////////////////////////
SUBS( combo_io,     "io",             LALT_T(KC_I),      RGUI_T(KC_O)        )                  
SUBS( combo_oi,     "oi",             RGUI_T(KC_O),      LALT_T(KC_I)        )               
SUBS( combo_ion,    "ion",            RSFT_T(KC_N),      RGUI_T(KC_O),   LALT_T(KC_I)        )              
SUBS( combo_tion,   "tion",           LSFT_T(KC_T),      RSFT_T(KC_N),   RGUI_T(KC_O),      LALT_T(KC_I)        )   
SUBS( combo_tion2,  "tion",           RSFT_T(KC_N),      RCTL_T(KC_E),   LALT_T(KC_I),      RGUI_T(KC_O)        )       

SUBS( combo_you,    "you",            KC_Y,          RGUI_T(KC_O),   KC_U                     )   
SUBS( combo_You,    "You",            LSFT_T(KC_T),  KC_Y,           RGUI_T(KC_O),   KC_U     )  
SUBS( combo_bps,    "bps",            KC_B,          KC_P,           LCTL_T(KC_S)             )

SUBS( combo_email1,  "d.meric@gmail.com",                   KC_Q,              KC_B        )   
SUBS( combo_email2,  "saloute@gmail.com",                   KC_Q,              KC_P        )     
SUBS( combo_email3,  "dorian.meric@mufgsecurities.com",     KC_Q,              KC_F        )   

SUBS( combo_text1,      "MUFG",                             KC_V,              KC_K       )   
SUBS( combo_text2,      "MUSE",                             KC_V,              KC_M       )   
// SUBS( combo_text3,  "MUBK",                                 KC_V,              KC_K       )   
SUBS( combo_text4,      "MUFG Securities EMEA Plc",         KC_V,              J_KEY      )   
SUBS( combo_text5,      "SOFR",                             KC_V,              KC_L       )
SUBS( combo_text6,      "6mE",                              KC_V,              KC_H       )

SUBS( combo_regards,    "Regards,\nDorian",                 KC_Z,              KC_V        )   
SUBS( combo_thanks,     "Thanks,\nDorian",                  KC_Z,              KC_D        )   
SUBS( combo_dorian,     "Dorian",                           KC_Z,              KC_C        )  
